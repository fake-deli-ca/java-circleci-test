buildscript {
    ext {
        springBootVersion = '2.1.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
  id "com.github.spotbugs" version "3.0.0"
  id "org.sonarqube" version "2.8"

}

group 'gr.di.uoa.pliakos.databasesystems'
version '2.1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'maven'

bootJar {
    mainClassName = 'gr.di.uoa.pliakos.databasesystems.SpringBootPostgresExample'
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion"
    compile "org.springframework.boot:spring-boot-devtools:$springBootVersion"
    runtime 'org.postgresql:postgresql:42.1.1'
    
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
    testCompile 'junit:junit:4.+'
}

archivesBaseName = 'alibaba-research-circleCI'

checkstyle {
    toolVersion '6.7'
    ignoreFailures true
    checkstyleTest.enabled = false
}
tasks.withType(Checkstyle) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

spotbugs {
    toolVersion = '4.0.0'
    ignoreFailures = true
    effort = "max"
    spotbugsTest.enabled = false
}
tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

sonarqube {
    properties {
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: System.getenv('NEXUS_URL')){
              authentication(userName: System.getenv('NEXUS_USERNAME'), password: System.getenv('NEXUS_USERPASSWORD'))
            }
        }
    }
}